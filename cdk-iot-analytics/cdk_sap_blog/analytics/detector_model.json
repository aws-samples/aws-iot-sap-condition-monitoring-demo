{
    "detectorModelDefinition": {
        "states": [
            {
                "stateName": "OverTemp",
                "onInput": {
                    "events": [
                        {
                            "eventName": "Online",
                            "condition": "currentInput(\"CDKSAPBlogEventsInput\")",
                            "actions": [
                                {
                                    "resetTimer": {
                                        "timerName": "awake"
                                    }
                                }
                            ]
                        }
                    ],
                    "transitionEvents": [
                        {
                            "eventName": "overTempTooLong",
                            "condition": "timeout(\"hiTempDur\")",
                            "actions": [],
                            "nextState": "OverTempAlarm"
                        },
                        {
                            "eventName": "tempBelowMax",
                            "condition": "convert(Decimal,$input.CDKSAPBlogEventsInput.temperature_degC_mean) < convert(Decimal,$input.CDKSAPBlogEventsInput.maxTemp_degC)",
                            "actions": [],
                            "nextState": "TempInRange"
                        },
                        {
                            "eventName": "NoData",
                            "condition": "timeout(\"awake\")",
                            "actions": [],
                            "nextState": "Offline"
                        }
                    ]
                },
                "onEnter": {
                    "events": [
                        {
                            "eventName": "startTimer",
                            "condition": "true",
                            "actions": [
                                {
                                    "setTimer": {
                                        "timerName": "hiTempDur",
                                        "seconds": 60,
                                        "durationExpression": null
                                    }
                                }
                            ]
                        },
                        {
                            "eventName": "Online",
                            "condition": "currentInput(\"CDKSAPBlogEventsInput\")",
                            "actions": [
                                {
                                    "setTimer": {
                                        "timerName": "awake",
                                        "seconds": 70,
                                        "durationExpression": null
                                    }
                                }
                            ]
                        }
                    ]
                },
                "onExit": {
                    "events": [
                        {
                            "eventName": "deleteTimer",
                            "condition": "true",
                            "actions": [
                                {
                                    "clearTimer": {
                                        "timerName": "hiTempDur"
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "stateName": "UnderTemp",
                "onInput": {
                    "events": [
                        {
                            "eventName": "Online",
                            "condition": "currentInput(\"CDKSAPBlogEventsInput\")",
                            "actions": [
                                {
                                    "resetTimer": {
                                        "timerName": "awake"
                                    }
                                }
                            ]
                        }
                    ],
                    "transitionEvents": [
                        {
                            "eventName": "underTempTooLong",
                            "condition": "timeout(\"loTempDur\")",
                            "actions": [],
                            "nextState": "UnderTempAlarm"
                        },
                        {
                            "eventName": "tempAboveMin",
                            "condition": "convert(Decimal,$input.CDKSAPBlogEventsInput.temperature_degC_mean) > convert(Decimal,$input.CDKSAPBlogEventsInput.minTemp_degC)",
                            "actions": [],
                            "nextState": "TempInRange"
                        },
                        {
                            "eventName": "NoData",
                            "condition": "timeout(\"awake\")",
                            "actions": [],
                            "nextState": "Offline"
                        }
                    ]
                },
                "onEnter": {
                    "events": [
                        {
                            "eventName": "startTimer",
                            "condition": "true",
                            "actions": [
                                {
                                    "setTimer": {
                                        "timerName": "loTempDur",
                                        "seconds": 60,
                                        "durationExpression": null
                                    }
                                }
                            ]
                        },
                        {
                            "eventName": "Online",
                            "condition": "currentInput(\"CDKSAPBlogEventsInput\")",
                            "actions": [
                                {
                                    "setTimer": {
                                        "timerName": "awake",
                                        "seconds": 70,
                                        "durationExpression": null
                                    }
                                }
                            ]
                        }
                    ]
                },
                "onExit": {
                    "events": [
                        {
                            "eventName": "deleteTimer",
                            "condition": "true",
                            "actions": [
                                {
                                    "clearTimer": {
                                        "timerName": "loTempDur"
                                    }
                                }
                            ]
                        }
                    ]
                }
            },
            {
                "stateName": "TempInRange",
                "onInput": {
                    "events": [
                        {
                            "eventName": "readTemp",
                            "condition": "true",
                            "actions": [
                                {
                                    "setVariable": {
                                        "variableName": "temperature_degC",
                                        "value": "convert(Decimal, $input.CDKSAPBlogEventsInput.temperature_degC_mean)"
                                    }
                                }
                            ]
                        },
                        {
                            "eventName": "Online",
                            "condition": "currentInput(\"CDKSAPBlogEventsInput\")",
                            "actions": [
                                {
                                    "resetTimer": {
                                        "timerName": "awake"
                                    }
                                }
                            ]
                        }
                    ],
                    "transitionEvents": [
                        {
                            "eventName": "tempAboveMax",
                            "condition": "convert(Decimal, $input.CDKSAPBlogEventsInput.temperature_degC_mean) > convert(Decimal, $input.CDKSAPBlogEventsInput.maxTemp_degC)",
                            "actions": [],
                            "nextState": "OverTemp"
                        },
                        {
                            "eventName": "tempBelowMin",
                            "condition": "convert(Decimal,$input.CDKSAPBlogEventsInput.temperature_degC_mean) < convert(Decimal,$input.CDKSAPBlogEventsInput.minTemp_degC)",
                            "actions": [],
                            "nextState": "UnderTemp"
                        },
                        {
                            "eventName": "NoData",
                            "condition": "timeout(\"awake\")",
                            "actions": [],
                            "nextState": "Offline"
                        }
                    ]
                },
                "onEnter": {
                    "events": [
                        {
                            "eventName": "Online",
                            "condition": "currentInput(\"CDKSAPBlogEventsInput\")",
                            "actions": [
                                {
                                    "setTimer": {
                                        "timerName": "awake",
                                        "seconds": 70,
                                        "durationExpression": null
                                    }
                                }
                            ]
                        }
                    ]
                },
                "onExit": {
                    "events": []
                }
            },
            {
                "stateName": "UnderTempAlarm",
                "onInput": {
                    "events": [
                        {
                            "eventName": "Online",
                            "condition": "currentInput(\"CDKSAPBlogEventsInput\")",
                            "actions": [
                                {
                                    "resetTimer": {
                                        "timerName": "awake"
                                    }
                                }
                            ]
                        }
                    ],
                    "transitionEvents": [
                        {
                            "eventName": "tempAboveMin",
                            "condition": "convert(Decimal,$input.CDKSAPBlogEventsInput.temperature_degC_mean) > convert(Decimal,$input.CDKSAPBlogEventsInput.minTemp_degC)",
                            "actions": [],
                            "nextState": "TempInRange"
                        },
                        {
                            "eventName": "NoData",
                            "condition": "timeout(\"awake\")",
                            "actions": [],
                            "nextState": "Offline"
                        }
                    ]
                },
                "onEnter": {
                    "events": [
                        {
                            "eventName": "sendAlert",
                            "condition": "true",
                            "actions": [
                                {
                                    "lambda": {
                                        "functionArn": "arn:aws:lambda:us-east-1:AWSACCOUNTID:function:CDK-SAP-Blog-OData-Function",
                                        "payload": {
                                            "contentExpression": "'{\n    \"d\": {\n        \"Equipment\": \"${$input.CDKSAPBlogEventsInput.Equipment}\",\n        \"FunctLoc\": \"${$input.CDKSAPBlogEventsInput.FunctLoc}\",\n        \"ShortText\": \"Alarm temperature below threshold\",\n        \"LongText\": \"Temperature of ${$input.CDKSAPBlogEventsInput.Type} at ${convert(Decimal,$input.CDKSAPBlogEventsInput.temperature_degC_mean)} °C below threshold of ${convert(Decimal,$input.CDKSAPBlogEventsInput.minTemp_degC)} °C\"\n    }\n}'",
                                            "type": "JSON"
                                        }
                                    }
                                },
                                {
                                    "setTimer": {
                                        "timerName": "awake",
                                        "seconds": 70,
                                        "durationExpression": null
                                    }
                                }
                            ]
                        }
                    ]
                },
                "onExit": {
                    "events": []
                }
            },
            {
                "stateName": "OverTempAlarm",
                "onInput": {
                    "events": [
                        {
                            "eventName": "Online",
                            "condition": "currentInput(\"CDKSAPBlogEventsInput\")",
                            "actions": [
                                {
                                    "resetTimer": {
                                        "timerName": "awake"
                                    }
                                }
                            ]
                        }
                    ],
                    "transitionEvents": [
                        {
                            "eventName": "tempBelowMax",
                            "condition": "convert(Decimal,$input.CDKSAPBlogEventsInput.temperature_degC_mean) < convert(Decimal,$input.CDKSAPBlogEventsInput.maxTemp_degC)",
                            "actions": [],
                            "nextState": "TempInRange"
                        },
                        {
                            "eventName": "NoData",
                            "condition": "timeout(\"awake\")",
                            "actions": [],
                            "nextState": "Offline"
                        }
                    ]
                },
                "onEnter": {
                    "events": [
                        {
                            "eventName": "sendAlert",
                            "condition": "true",
                            "actions": [
                                {
                                    "lambda": {
                                        "functionArn": "arn:aws:lambda:us-east-1:AWSACCOUNTID:function:CDK-SAP-Blog-OData-Function",
                                        "payload": {
                                            "contentExpression": "'{\n    \"d\": {\n        \"Equipment\": \"${$input.CDKSAPBlogEventsInput.Equipment}\",\n        \"FunctLoc\": \"${$input.CDKSAPBlogEventsInput.FunctLoc}\",\n        \"ShortText\": \"Alarm temperature above threshold\",\n        \"LongText\": \"Temperature of ${$input.CDKSAPBlogEventsInput.Type} at ${convert(Decimal,$input.CDKSAPBlogEventsInput.temperature_degC_mean)} °C above threshold of ${convert(Decimal,$input.CDKSAPBlogEventsInput.maxTemp_degC)} °C\"\n    }\n}'",
                                            "type": "JSON"
                                        }
                                    }
                                },
                                {
                                    "setTimer": {
                                        "timerName": "awake",
                                        "seconds": 60,
                                        "durationExpression": null
                                    }
                                }
                            ]
                        }
                    ]
                },
                "onExit": {
                    "events": []
                }
            },
            {
                "stateName": "Offline",
                "onInput": {
                    "events": [],
                    "transitionEvents": [
                        {
                            "eventName": "BackOnline",
                            "condition": "currentInput(\"CDKSAPBlogEventsInput\")",
                            "actions": [],
                            "nextState": "TempInRange"
                        }
                    ]
                },
                "onEnter": {
                    "events": []
                },
                "onExit": {
                    "events": []
                }
            }
        ],
        "initialStateName": "Offline"
    },
    "detectorModelDescription": "Detect temperature in a given range.",
    "detectorModelName": "CDKSAPBlogDetectorModel",
    "evaluationMethod": "BATCH",
    "key": "thingname",
    "roleArn": "arn:aws:iam::AWSACCOUNTID:role/CDKSAPBlogEventDetectorRole"
}
